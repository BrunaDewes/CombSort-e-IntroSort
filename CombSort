# Para encontrar a próxima lacuna (gap)
def getNextGap(gap):
  
    # Espaço de encolhimento pelo fator encolhimento
    gap = (gap * 10)//13
    if gap < 1:
        return 1
    return gap
  
# Função para classificar o arr[] usando Comb Sort
def combSort(arr):
    n = len(arr)
  
    # Inicializa o gap
    gap = n
  
    # Inicialize swapped (troca) como verdadeiro para 
    # garantir que o loop seja executado
    swapped = True
  
    # Continue executando enquanto o intervalo for maior que 1 
    # e a última iteração causou uma troca
    while gap !=1 or swapped == 1:
  
        # Encontre o próximo gap
        gap = getNextGap(gap)
  
        # Inicialize a troca como falsa para que possamos verificar 
        # se a troca ocorreu ou não
        swapped = False
  
        # Compare todos os elementos com o gap atual
        for i in range(0, n-gap):
            if arr[i] > arr[i + gap]:
                arr[i], arr[i + gap]=arr[i + gap], arr[i]
                swapped = True
  
  
# Código para testar
arr = [8, 4, 1, 6, 3, 2, 9, -5, 7, 0]
combSort(arr)
  
print ("Array ordenado:")
for i in range(len(arr)):
    print (arr[i],end=" ")
